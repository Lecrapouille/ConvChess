\frametitle{Gameplay}
\begin{itemize}
 \item Use the predictions and evaluations made by the models discussed to play
a game of chess
 \item Choosing a move:
 \begin{itemize}
  \item Top Move Method: Choose the piece with the highest
predicted probability, and then choose the position to move the piece to using
the $move|piece$ model
\only<2>{
\begin{tiny}
\begin{algorithm}[H]
\tiny
\begin{algorithmic}[1]
  \State initial\_pos = argmax($P_{piece}(board)$)\;
    \State piece\_type = getType(initial\_pos)\;
    \State final\_pos = \funccall{argmax}($P_{move,piece\_type}(board)$)\;
    \Return chess\_coords(initial\_pos)+chess\_coords( final\_pos)\;
\end{algorithmic}
\caption{Top-move method}
\label{alg:topmove}
\end{algorithm}
\end{tiny}
 }
  \only<3->{
 \item Top Prob Method: Choose the move with the maximum joint probability--
$P(move | board ) = P(piece | board )\times
P(final\_position|piece, board)$
  }
  \only<4>{
  \begin{algorithm}[H]
  \tiny
 \begin{algorithmic}[1]
  \State piece\_dist = $P_{piece}(board)$
    \State cumulative\_dist = \funccall{zeros}(64,64)
    \For {$0\leq i<64$}
    \If {$board[i/8,i\% 8]\neq 0$}
    \State piece\_type=\funccall{getType}(i)
    \State move\_distr = $P_{move,piece\_type}(board)$ *
piece\_distr[i]
    \State cumulative\_distr[i] = move\_distr
    \EndIf
    \EndFor
    \State initial\_pos, final\_pos = \funccall{argmax}(cumulative\_distr)
    \Return \funccall{chess\_coords}(initial\_pos)+\funccall{chess\_coords}
( final\_pos)
 \end{algorithmic}
 \caption{Top-prob method}
 \label{alg:topprob}
\end{algorithm}
  }
 \end{itemize}
\end{itemize}
